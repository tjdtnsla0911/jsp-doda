package com.cos.blog.user;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.cos.blog.action.Action;
import com.cos.blog.model.RoleType;
import com.cos.blog.model.Users;
import com.cos.blog.repository.UsersRepository;

public class UsersJoinProcAction implements Action {
@Override
public void execute(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	if(
			request.getParameter("username").equals("")||
			request.getParameter("username")==null ||
			request.getParameter("password").equals("")||
			request.getParameter("password")==null ||
			request.getParameter("email").equals("")||
			request.getParameter("email")==null||
			request.getParameter("address").equals("")||
			request.getParameter("address")==null
	  ) {
		return;
	}
	// 1.파라메터 받기
	String username = request.getParameter("username");
	String password = request.getParameter("password");
	String email = request.getParameter("email");
	String address =request.getParameter("address");
	String userRole = RoleType.USER.toString();
	//USER란 글자 자체가 RoleType

	//2.User 오브젝트 변환
	Users user = Users.builder()
			.username(username)
			.password(password)
			.email(email)
			.address(address)
			.userRole(userRole)
			.build();

	//3.DB연결 -UsersRepsitory의 save() 호출
	UsersRepository usersRepository = UsersRepository.getInstance();
	int result = usersRepository.save(user);

}
}
